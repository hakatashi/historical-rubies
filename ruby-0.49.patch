diff -Naur ruby/array.c ruby-patched/array.c
--- ruby/array.c	1994-07-18 16:32:54.000000000 +0900
+++ ruby-patched/array.c	2018-03-20 12:45:55.161849700 +0900
@@ -11,6 +11,7 @@
 ************************************************/
 
 #include "ruby.h"
+#include <string.h>
 
 VALUE C_Array;
 
@@ -40,12 +41,10 @@
     return ary_new2(ARY_DEFAULT_SIZE);
 }
 
-#include <varargs.h>
+#include <stdarg.h>
 
 VALUE
-ary_new3(n, va_alist)
-    int n;
-    va_dcl
+ary_new3(int n, ...)
 {
     va_list ar;
     struct RArray* ary;
@@ -56,7 +55,7 @@
     }
     ary = (struct RArray*)ary_new2(n<ARY_DEFAULT_SIZE?ARY_DEFAULT_SIZE:n);
 
-    va_start(ar);
+    va_start(ar, n);
     for (i=0; i<n; i++) {
 	ary->ptr[i] = va_arg(ar, VALUE);
     }
diff -Naur ruby/bignum.c ruby-patched/bignum.c
--- ruby/bignum.c	1994-07-06 17:58:52.000000000 +0900
+++ ruby-patched/bignum.c	2018-03-20 12:45:55.184398200 +0900
@@ -10,6 +10,8 @@
 
 #include "ruby.h"
 #include <ctype.h>
+#include <string.h>
+#include <math.h>
 
 extern VALUE C_Integer;
 VALUE C_Bignum;
diff -Naur ruby/class.c ruby-patched/class.c
--- ruby/class.c	1994-07-18 10:49:41.000000000 +0900
+++ ruby-patched/class.c	2018-03-20 12:45:55.193686200 +0900
@@ -14,6 +14,8 @@
 #include "env.h"
 #include "node.h"
 #include "st.h"
+#include <string.h>
+#include <stdio.h>
 
 struct st_table *new_idhash();
 
@@ -302,14 +304,11 @@
     rb_define_attr(rb_single_class(obj), name, pub);
 }
 
-#include <varargs.h>
+#include <stdarg.h>
 #include <ctype.h>
 
 int
-rb_scan_args(args, fmt, va_alist)
-    VALUE args;
-    char *fmt;
-    va_dcl
+rb_scan_args(VALUE args, char* fmt, ...)
 {
     int n, i, len;
     char *p = fmt;
@@ -324,7 +323,7 @@
 	len = RARRAY(args)->len;
     }
 
-    va_start(vargs);
+    va_start(vargs, fmt);
 
     if (*p == '*') {
 	var = va_arg(vargs, VALUE*);
diff -Naur ruby/config.status ruby-patched/config.status
--- ruby/config.status	1994-06-02 23:54:17.000000000 +0900
+++ ruby-patched/config.status	2018-03-20 11:17:59.840089200 +0900
@@ -2,7 +2,7 @@
 # Generated automatically by configure.
 # Run this file to recreate the current configuration.
 # This directory was configured as follows,
-# on host dyna:
+# on host DESKTOP-CHCLKIU:
 #
 # ./configure 
 
@@ -22,14 +22,15 @@
 CPP='gcc -E'
 DBM='-fpcc-struct-return'
 STATIC=''
-YACC='bison -y'
+YACC='yacc'
 INSTALL='/usr/bin/install -c'
 INSTALL_PROGRAM='$(INSTALL)'
 INSTALL_DATA='$(INSTALL) -m 644'
 ALLOCA=''
-LIBS=' -lm -ldbm'
+LIBOBJS=''
+LIBS=' -lm'
 srcdir='.'
-DEFS=' -DHAVE_UNISTD_H=1 -DHAVE_SYSCALL_H=1 -DHAVE_A_OUT_H=1 -DDIRENT=1 -DGETGROUPS_T=gid_t -DRETSIGTYPE=void -DHAVE_GETOPT_LONG=1 -DHAVE_MEMMOVE=1 -DHAVE_STRERROR=1 -DHAVE_STRTOL=1 -DHAVE_STRTOUL=1 -DHAVE_STRDUP=1 -DHAVE_SETENV=1 -DHAVE_KILLPG=1 -DHAVE_MKDIR=1 -DHAVE_STRFTIME=1 -DHAVE_ALLOCA_H=1'
+DEFS=' -DHAVE_UNISTD_H=1 -DHAVE_SYSCALL_H=1 -DHAVE_A_OUT_H=1 -DDIRENT=1 -DGETGROUPS_T=gid_t -DRETSIGTYPE=void -DHAVE_GETOPT_LONG=1 -DHAVE_MEMMOVE=1 -DHAVE_STRERROR=1 -DHAVE_STRTOUL=1 -DHAVE_STRDUP=1 -DHAVE_STRSTR=1 -DHAVE_SETENV=1 -DHAVE_KILLPG=1 -DHAVE_MKDIR=1 -DHAVE_STRFTIME=1 -DHAVE_SOCKET=1 -DHAVE_RANDOM=1 -DHAVE_WAIT4=1 -DHAVE_WAITPID=1 -DHAVE_ALLOCA_H=1 -DHAVE_ST_BLKSIZE=1 -DHAVE_ST_BLOCKS=1 -DHAVE_ST_RDEV=1'
 prefix=''
 exec_prefix=''
 prsub=''
@@ -62,6 +63,7 @@
 s%@INSTALL_PROGRAM@%$INSTALL_PROGRAM%g
 s%@INSTALL_DATA@%$INSTALL_DATA%g
 s%@ALLOCA@%$ALLOCA%g
+s%@LIBOBJS@%$LIBOBJS%g
 s%@LIBS@%$LIBS%g
 s%@srcdir@%$srcdir%g
 s%@DEFS@%$DEFS%
diff -Naur ruby/dbm.c ruby-patched/dbm.c
--- ruby/dbm.c	1994-07-18 16:42:13.000000000 +0900
+++ ruby-patched/dbm.c	2018-03-20 12:45:55.208474500 +0900
@@ -14,9 +14,10 @@
 
 #ifdef USE_DBM
 
-#include <ndbm.h>
+#include <gdbm-ndbm.h>
 #include <sys/file.h>
 #include <errno.h>
+#include <string.h>
 
 VALUE C_DBM;
 
diff -Naur ruby/dict.c ruby-patched/dict.c
--- ruby/dict.c	1994-07-18 16:36:12.000000000 +0900
+++ ruby-patched/dict.c	2018-03-20 12:45:55.220242100 +0900
@@ -12,6 +12,7 @@
 
 #include "ruby.h"
 #include "st.h"
+#include <string.h>
 
 VALUE C_Dict, C_EnvDict;
 static ID hash, eq;
diff -Naur ruby/dir.c ruby-patched/dir.c
--- ruby/dir.c	1994-07-05 15:28:16.000000000 +0900
+++ ruby-patched/dir.c	2018-03-20 12:45:55.227637900 +0900
@@ -11,6 +11,7 @@
 ************************************************/
 
 #include "ruby.h"
+#include <string.h>
 
 #include <sys/types.h>
 #ifdef HAVE_UNISTD_H
@@ -179,7 +180,7 @@
     extern char *getwd();
     char path[MAXPATHLEN];
 
-    if (getwd(path) == 0) Fail(path);
+    if (getcwd(path, MAXPATHLEN) == 0) Fail(path);
 
     return str_new2(path);
 }
diff -Naur ruby/dln.c ruby-patched/dln.c
--- ruby/dln.c	1994-06-17 23:23:49.000000000 +0900
+++ ruby-patched/dln.c	2018-03-20 12:45:55.249641500 +0900
@@ -16,13 +16,14 @@
 #include "defines.h"
 #include "dln.h"
 #include <sys/types.h>
+#include <string.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
 char *strdup();
 
-extern int errno;
+#include <errno.h>
 int dln_errno;
 
 static int dln_init_p = 0;
diff -Naur ruby/error.c ruby-patched/error.c
--- ruby/error.c	1994-07-11 11:57:28.000000000 +0900
+++ ruby-patched/error.c	2018-03-20 12:45:55.264066100 +0900
@@ -13,7 +13,10 @@
 #include "ruby.h"
 #include "env.h"
 #include <stdio.h>
-#include <varargs.h>
+#include <string.h>
+#include <stdarg.h>
+#include <stdlib.h>
+#include <errno.h>
 
 extern char *sourcefile;
 extern int   sourceline;
@@ -53,73 +56,67 @@
     }
 }
 
+void
+Error(char*, ...);
+
 yyerror(msg)
     char *msg;
 {
     Error("%s", msg);
 }
 
-Error(fmt, va_alist)
-    char *fmt;
-    va_dcl
+void
+Error(char* fmt, ...)
 {
     va_list args;
 
-    va_start(args);
+    va_start(args, fmt);
     err_print(fmt, args);
     va_end(args);
     nerrs++;
 }
 
-Warning(fmt, va_alist)
-    char *fmt;
-    va_dcl
+Warning(char* fmt, ...)
 {
     char buf[BUFSIZ]; 
     va_list args;
 
     sprintf(buf, "warning: %s", fmt);
 
-    va_start(args);
+    va_start(args, fmt);
     err_print(buf, args);
     va_end(args);
 }
 
-Fatal(fmt, va_alist)
-    char *fmt;
-    va_dcl
+Fatal(char* fmt, ...)
 {
     va_list args;
 
-    va_start(args);
+    va_start(args, fmt);
     err_print(fmt, args);
     va_end(args);
     rb_exit(1);
 }
 
-Bug(fmt, va_alist)
-    char *fmt;
-    va_dcl
+Bug(char* fmt, ...)
 {
     char buf[BUFSIZ]; 
     va_list args;
 
     sprintf(buf, "[BUG] %s", fmt);
 
-    va_start(args);
+    va_start(args, fmt);
     err_print(buf, args);
     va_end(args);
     abort();
 }
 
-Fail(fmt, va_alist)
-    char *fmt;
-    va_dcl
+Fail(char* fmt, ...)
 {
     va_list args;
     char buf[BUFSIZ]; 
 
-    va_start(args);
+    va_start(args, fmt);
     vsprintf(buf, fmt, args);
     va_end(args);
 
@@ -130,7 +127,6 @@
     char *mesg;
 {
     char buf[BUFSIZ];
-    extern int errno;
 
     if (mesg == Qnil)
 	sprintf(buf, "%s.\n", strerror(errno));
diff -Naur ruby/eval.c ruby-patched/eval.c
--- ruby/eval.c	1994-07-18 18:06:31.000000000 +0900
+++ ruby-patched/eval.c	2018-03-20 12:45:55.305333300 +0900
@@ -15,6 +15,8 @@
 #include "node.h"
 #include "ident.h"
 #include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 #include <setjmp.h>
 #include "st.h"
 
@@ -1561,14 +1563,10 @@
     return rb_apply(recv, mid, rest);
 }
 
-#include <varargs.h>
+#include <stdarg.h>
 
 VALUE
-rb_funcall(recv, mid, n, va_alist)
-    VALUE recv;
-    ID mid;
-    int n;
-    va_dcl
+rb_funcall(VALUE recv, ID mid, int n, ...)
 {
     va_list ar;
     int argc;
@@ -1580,7 +1578,7 @@
 	argc = n + 1;
 	argv = (VALUE*)alloca(sizeof(VALUE)*argc);
 
-	va_start(ar);
+	va_start(ar, n);
 	for (i=1;i<argc;i++) {
 	    argv[i] = va_arg(ar, VALUE);
 	}
diff -Naur ruby/file.c ruby-patched/file.c
--- ruby/file.c	1994-07-01 01:06:43.000000000 +0900
+++ ruby-patched/file.c	2018-03-20 12:45:55.326447400 +0900
@@ -13,6 +13,7 @@
 
 #include "ruby.h"
 #include "io.h"
+#include <string.h>
 #include <sys/time.h>
 #include <sys/param.h>
 #ifdef HAVE_UNISTD_H
diff -Naur ruby/gc.c ruby-patched/gc.c
--- ruby/gc.c	1994-07-11 11:57:26.000000000 +0900
+++ ruby-patched/gc.c	2018-03-20 12:45:55.338211600 +0900
@@ -14,6 +14,8 @@
 #include "env.h"
 #include "st.h"
 #include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 
 void *malloc();
 void *calloc();
diff -Naur ruby/io.c ruby-patched/io.c
--- ruby/io.c	1994-07-16 00:59:17.000000000 +0900
+++ ruby-patched/io.c	2018-03-20 12:45:55.366851600 +0900
@@ -14,6 +14,8 @@
 #include "io.h"
 #include <ctype.h>
 #include <errno.h>
+#include <string.h>
+#include <stdlib.h>
 #include <sys/time.h>
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -607,7 +609,7 @@
 
 	if (doexec) {
 	    rb_proc_exec(pname);
-	    _exit(127);
+	    exit(127);
 	}
 	return Qnil;
 
@@ -927,7 +929,7 @@
 struct timeval *time_timeval();
 
 #ifdef __linux__
-#   define READ_PENDING(fp) ((fp)->_gptr < (fp)->_egptr > 0)
+#   define READ_PENDING(fp) 0
 #else
 # ifdef __SLBF
 #   define READ_PENDING(fp) ((fp)->_r > 0)
diff -Naur ruby/Makefile ruby-patched/Makefile
--- ruby/Makefile	1994-06-03 18:20:03.000000000 +0900
+++ ruby-patched/Makefile	2018-03-20 12:52:21.491449100 +0900
@@ -1,21 +1,4 @@
 # Generated automatically from Makefile.in by configure.
-# Main Makefile for GNU m4.
-# Copyright (C) 1992 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-
 SHELL = /bin/sh
 
 #### Start of system configuration section. ####
@@ -23,18 +6,18 @@
 srcdir = .
 VPATH = .
 
-CC = gcc -traditional
+CC = gcc
 DBM = -fpcc-struct-return
-YACC = bison -y
+YACC = yacc
 INSTALL = /usr/bin/install -c
 INSTALL_PROGRAM = $(INSTALL)
 INSTALL_DATA = $(INSTALL) -m 644
 MAKEINFO = makeinfo
 
-CFLAGS = -g
-LDFLAGS = -static $(CFLAGS)
-LIBS =  -lm -ldbm
-DEFS =  -DHAVE_UNISTD_H=1 -DHAVE_SYSCALL_H=1 -DHAVE_A_OUT_H=1 -DDIRENT=1 -DGETGROUPS_T=int -DRETSIGTYPE=void -DHAVE_STRTOL=1 -DHAVE_STRDUP=1 -DHAVE_KILLPG=1 -DHAVE_MKDIR=1 -DHAVE_STRFTIME=1 -DHAVE_PUTENV=1 -DHAVE_ALLOCA_H=1 -DPW_AGE=1 -DPW_COMMENT=1
+CFLAGS = -g -m32
+LDFLAGS =  $(CFLAGS)
+LIBS =  -lm
+DEFS =  -DHAVE_UNISTD_H=1 -DHAVE_SYSCALL_H=1 -DHAVE_A_OUT_H=1 -DDIRENT=1 -DGETGROUPS_T=gid_t -DRETSIGTYPE=void -DHAVE_GETOPT_LONG=1 -DHAVE_MEMMOVE=1 -DHAVE_STRERROR=1 -DHAVE_STRTOUL=1 -DHAVE_STRDUP=1 -DHAVE_STRSTR=1 -DHAVE_SETENV=1 -DHAVE_KILLPG=1 -DHAVE_MKDIR=1 -DHAVE_STRFTIME=1 -DHAVE_SOCKET=1 -DHAVE_RANDOM=1 -DHAVE_WAIT4=1 -DHAVE_WAITPID=1 -DHAVE_ALLOCA_H=1 -DHAVE_ST_BLKSIZE=1 -DHAVE_ST_BLOCKS=1 -DHAVE_ST_RDEV=1
 
 prefix = /usr/local
 binprefix = 
@@ -59,7 +42,7 @@
 		version.h
 
 SRCS          = array.c \
-		autoexec.c \
+		bignum.c \
 		class.c \
 		compar.c \
 		dbm.c \
@@ -97,7 +80,7 @@
 		version.c
 
 OBJS	      = array.o \
-		autoexec.o \
+		bignum.o \
 		class.o \
 		compar.o \
 		dbm.o \
@@ -143,10 +126,10 @@
 all:		$(PROGRAM)
 
 $(PROGRAM):     $(OBJS)
-		@echo -n "Loading $(PROGRAM) ... "
-		@rm -f $(PROGRAM)
-		@$(CC) $(LDFLAGS) $(OBJS) $(LIBS) -o $(PROGRAM)
-		@echo "done"
+		echo -n "Loading $(PROGRAM) ... "
+		rm -f $(PROGRAM)
+		$(CC) $(LDFLAGS) $(OBJS) $(LIBS) -o $(PROGRAM)
+		echo "done"
 
 install: $(PROGMAM)
 	$(INSTALL_PROGRAM) $(PROGRAM) $(bindir)/$(PROGRAM)
@@ -162,28 +145,31 @@
 # Prevent GNU make v3 from overflowing arg limit on SysV.
 .NOEXPORT:
 ###
+parse.o : parse.y ruby.h defines.h env.h ident.h node.h st.h regex.h 
+###
 array.o : array.c ruby.h defines.h 
-autoexec.o : autoexec.c ruby.h defines.h 
-class.o : class.c ruby.h defines.h node.h st.h 
+bignum.o : bignum.c ruby.h defines.h 
+class.o : class.c ruby.h defines.h env.h node.h st.h 
 compar.o : compar.c ruby.h defines.h 
 dbm.o : dbm.c ruby.h defines.h 
 dict.o : dict.c ruby.h defines.h st.h 
 dir.o : dir.c ruby.h defines.h 
 dln.o : dln.c defines.h dln.h 
 enum.o : enum.c ruby.h defines.h 
-error.o : error.c ruby.h defines.h 
+error.o : error.c ruby.h defines.h env.h 
 etc.o : etc.c ruby.h defines.h 
-eval.o : eval.c ruby.h defines.h node.h ident.h st.h 
+eval.o : eval.c ruby.h defines.h env.h node.h ident.h st.h 
 file.o : file.c ruby.h defines.h io.h 
-gc.o : gc.c ruby.h defines.h st.h 
+gc.o : gc.c ruby.h defines.h env.h st.h 
 inits.o : inits.c 
 io.o : io.c ruby.h defines.h io.h 
 math.o : math.c ruby.h defines.h 
-methods.o : methods.c ruby.h defines.h node.h 
+methods.o : methods.c ruby.h defines.h env.h node.h 
 missing.o : missing.c ruby.h defines.h missing/memmove.c missing/strerror.c \
-  missing/strtoul.c missing/strftime.c missing/getopt.h missing/getopt.c missing/getopt1.c 
-numeric.o : numeric.c ruby.h defines.h 
-object.o : object.c ruby.h defines.h 
+  missing/strtoul.c missing/strftime.c missing/strstr.c missing/getopt.h missing/getopt.c \
+  missing/getopt1.c missing/mkdir.c 
+numeric.o : numeric.c ruby.h defines.h env.h 
+object.o : object.c ruby.h defines.h env.h node.h st.h 
 pack.o : pack.c ruby.h defines.h 
 process.o : process.c ruby.h defines.h st.h 
 random.o : random.c ruby.h defines.h 
@@ -191,12 +177,11 @@
 re.o : re.c ruby.h defines.h re.h regex.h 
 regex.o : regex.c regex.h 
 ruby.o : ruby.c ruby.h defines.h re.h regex.h missing/getopt.h 
-socket.o : socket.c ruby.h defines.h io.h 
+socket.o : socket.c ruby.h defines.h 
 sprintf.o : sprintf.c ruby.h defines.h 
 st.o : st.c st.h 
 string.o : string.c ruby.h defines.h re.h regex.h 
-struct.o : struct.c ruby.h defines.h 
+struct.o : struct.c ruby.h defines.h env.h 
 time.o : time.c ruby.h defines.h 
-variable.o : variable.c ruby.h defines.h st.h ident.h 
-version.o : version.c ruby.h defines.h \
-  version.h
+variable.o : variable.c ruby.h defines.h env.h node.h ident.h st.h 
+version.o : version.c ruby.h defines.h version.h 
diff -Naur ruby/Makefile.in ruby-patched/Makefile.in
--- ruby/Makefile.in	1994-07-14 11:21:42.000000000 +0900
+++ ruby-patched/Makefile.in	2018-03-20 11:16:50.155527000 +0900
@@ -13,7 +13,7 @@
 INSTALL_DATA = @INSTALL_DATA@
 MAKEINFO = makeinfo
 
-CFLAGS = -g
+CFLAGS = -g -m32
 LDFLAGS = @STATIC@ $(CFLAGS)
 LIBS = @LIBS@
 DEFS = @DEFS@
diff -Naur ruby/numeric.c ruby-patched/numeric.c
--- ruby/numeric.c	1994-07-11 13:06:31.000000000 +0900
+++ ruby-patched/numeric.c	2018-03-20 12:45:55.571518000 +0900
@@ -13,6 +13,7 @@
 #include "ruby.h"
 #include "env.h"
 #include <math.h>
+#include <stdio.h>
 
 static ID coerce;
 static ID to_i;
diff -Naur ruby/object.c ruby-patched/object.c
--- ruby/object.c	1994-07-18 18:07:03.000000000 +0900
+++ ruby-patched/object.c	2018-03-20 12:45:55.584471800 +0900
@@ -15,6 +15,7 @@
 #include "node.h"
 #include "st.h"
 #include <stdio.h>
+#include <string.h>
 
 VALUE C_Kernel;
 VALUE C_Object;
diff -Naur ruby/pack.c ruby-patched/pack.c
--- ruby/pack.c	1994-07-12 13:49:54.000000000 +0900
+++ ruby-patched/pack.c	2018-03-20 12:45:55.601108100 +0900
@@ -13,6 +13,7 @@
 #include "ruby.h"
 #include <ctype.h>
 #include <sys/types.h>
+#include <string.h>
 
 #define swaps(x)	((((x)&0xFF)<<8) + (((x)>>8)&0xFF))
 #define swapl(x)	((((x)&0xFF)<<24)	\
@@ -20,23 +21,23 @@
 			+(((x)&0x0000FF00)<<8)	\
 			+(((x)&0x00FF0000)>>8)	)
 #ifdef WORDS_BIGENDIAN
-#define ntohs(x) (x)
-#define ntohl(x) (x)
-#define htons(x) (x)
-#define htonl(x) (x)
-#define htovs(x) swaps(x)
-#define htovl(x) swapl(x)
-#define vtohs(x) swaps(x)
-#define vtohl(x) swapl(x)
+#define rb_ntohs(x) (x)
+#define rb_ntohl(x) (x)
+#define rb_htons(x) (x)
+#define rb_htonl(x) (x)
+#define rb_htovs(x) swaps(x)
+#define rb_htovl(x) swapl(x)
+#define rb_vtohs(x) swaps(x)
+#define rb_vtohl(x) swapl(x)
 #else /* LITTLE ENDIAN */
-#define ntohs(x) swaps(x)
-#define ntohl(x) swapl(x)
-#define htons(x) swaps(x)
-#define htonl(x) swapl(x)
-#define htovs(x) (x)
-#define htovl(x) (x)
-#define vtohs(x) (x)
-#define vtohl(x) (x)
+#define rb_ntohs(x) swaps(x)
+#define rb_ntohl(x) swapl(x)
+#define rb_htons(x) swaps(x)
+#define rb_htonl(x) swapl(x)
+#define rb_htovs(x) (x)
+#define rb_htovl(x) (x)
+#define rb_vtohs(x) (x)
+#define rb_vtohl(x) (x)
 #endif
 
 extern VALUE C_String, C_Array;
@@ -305,7 +306,7 @@
 		else {
 		    s = NUM2INT(from);
 		}
-		s = htons(s);
+		s = rb_htons(s);
 		str_cat(res, &s, sizeof(short));
 	    }
 	    break;
@@ -319,7 +320,7 @@
 		else {
 		    l = NUM2INT(from);
 		}
-		l = htonl(l);
+		l = rb_htonl(l);
 		str_cat(res, &l, sizeof(long));
 	    }
 	    break;
@@ -373,7 +374,7 @@
 		else {
 		    s = NUM2INT(from);
 		}
-		s = htovs(s);
+		s = rb_htovs(s);
 		str_cat(res, &s, sizeof(short));
 	    }
 	    break;
@@ -387,7 +388,7 @@
 		else {
 		    l = NUM2INT(from);
 		}
-		l = htovl(l);
+		l = rb_htovl(l);
 		str_cat(res, &l, sizeof(long));
 	    }
 	    break;
@@ -708,7 +709,7 @@
 		short tmp;
 		memcpy(&tmp, s, sizeof(short));
 		s += sizeof(short);
-		tmp = ntohs(tmp);
+		tmp = rb_ntohs(tmp);
 		Fary_push(ary, int2inum(tmp));
 	    }
 	    break;
@@ -720,7 +721,7 @@
 		long tmp;
 		memcpy(&tmp, s, sizeof(long));
 		s += sizeof(long);
-		tmp = ntohl(tmp);
+		tmp = rb_ntohl(tmp);
 		Fary_push(ary, int2inum(tmp));
 	    }
 	    break;
@@ -756,7 +757,7 @@
 		short tmp;
 		memcpy(&tmp, s, sizeof(short));
 		s += sizeof(short);
-		tmp = vtohs(tmp);
+		tmp = rb_vtohs(tmp);
 		Fary_push(ary, int2inum(tmp));
 	    }
 	    break;
@@ -768,7 +769,7 @@
 		long tmp;
 		memcpy(&tmp, s, sizeof(long));
 		s += sizeof(long);
-		tmp = vtohl(tmp);
+		tmp = rb_vtohl(tmp);
 		Fary_push(ary, int2inum(tmp));
 	    }
 	    break;
diff -Naur ruby/parse.y ruby-patched/parse.y
--- ruby/parse.y	1994-07-18 17:57:30.000000000 +0900
+++ ruby-patched/parse.y	2018-03-20 11:16:50.227437200 +0900
@@ -17,6 +17,7 @@
 #include "env.h"
 #include "node.h"
 #include "st.h"
+#include <string.h>
 
 #include "ident.h"
 #define is_id_nonop(id) ((id)>LAST_TOKEN)
diff -Naur ruby/process.c ruby-patched/process.c
--- ruby/process.c	1994-07-18 12:08:44.000000000 +0900
+++ ruby-patched/process.c	2018-03-20 12:45:55.618729600 +0900
@@ -17,6 +17,9 @@
 #include <signal.h>
 #include <sys/time.h>
 #include <sys/resource.h>
+#include <string.h>
+#include <stdlib.h>
+#include <unistd.h>
 #include "st.h"
 VALUE rb_readonly_hook();
 
@@ -195,7 +198,7 @@
 	code = INT2FIX(status);
     }
 
-    _exit(code);
+    exit(code);
 
     /* not reached */
     return Qnil;
@@ -236,7 +239,7 @@
     switch (pid = vfork()) {
       case 0:
 	rb_proc_exec(str->ptr);
-	_exit(127);
+	exit(127);
 	break;			/* not reached */
 
       case -1:
@@ -529,21 +532,6 @@
 #ifdef HAVE_SYSCALL_H
 #include <syscall.h>
 
-#ifdef SYS_read
-int
-read(fd, buf, nbytes)
-    int fd, nbytes;
-    char *buf;
-{
-    int res;
-
-    trap_immediate++;
-    res = syscall(SYS_read, fd, buf, nbytes);
-    trap_immediate = 0;
-    return res;
-}
-#endif /* SYS_read */
-
 #ifdef SYS_wait
 int
 wait(status)
@@ -704,7 +692,7 @@
 	pid = NUM2INT(vpid);
     }
 
-    pgrp = getpgrp(pid);
+    pgrp = getpgid(pid);
     return INT2FIX(pgrp);
 }
 
@@ -717,7 +705,7 @@
     ipid = NUM2INT(pid);
     ipgrp = NUM2INT(pgrp);
 
-    if (getpgrp(ipid, ipgrp) == -1) rb_sys_fail(Qnil);
+    if (setpgid(ipid, ipgrp) == -1) rb_sys_fail(Qnil);
 
     return Qnil;
 }
diff -Naur ruby/re.c ruby-patched/re.c
--- ruby/re.c	1994-07-07 15:17:07.000000000 +0900
+++ ruby-patched/re.c	2018-03-20 12:45:55.639337800 +0900
@@ -12,6 +12,8 @@
 
 #include "ruby.h"
 #include "re.h"
+#include <stdlib.h>
+#include <string.h>
 
 /* Generate compiled regular expressions */
 #if 'a' == 97   /* it's ascii */
diff -Naur ruby/regex.c ruby-patched/regex.c
--- ruby/regex.c	1994-07-07 16:14:19.000000000 +0900
+++ ruby-patched/regex.c	2018-03-20 12:45:55.700970500 +0900
@@ -29,6 +29,9 @@
 /* We write fatal error messages on standard error.  */
 #include <stdio.h>
 
+#include <string.h>
+#include <stdlib.h>
+
 /* isalpha(3) etc. are used for the character classes.  */
 #include <ctype.h>
 
diff -Naur ruby/ruby.c ruby-patched/ruby.c
--- ruby/ruby.c	1994-07-16 01:10:56.000000000 +0900
+++ ruby-patched/ruby.c	2018-03-20 12:45:55.711998800 +0900
@@ -13,6 +13,8 @@
 #include "ruby.h"
 #include "re.h"
 #include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 #include <sys/file.h>
 #include <sys/types.h>
 #include <sys/stat.h>
diff -Naur ruby/ruby.h ruby-patched/ruby.h
--- ruby/ruby.h	1994-07-15 11:17:25.000000000 +0900
+++ ruby-patched/ruby.h	2018-03-20 11:16:50.243819600 +0900
@@ -21,9 +21,7 @@
 #define const
 #endif
 
-#if defined(HAVE_ALLOCA_H) && !defined(__GNUC__)
 #include <alloca.h>
-#endif
 
 typedef unsigned int UINT;
 typedef UINT VALUE;
@@ -287,9 +285,10 @@
 
 ID rb_intern();
 char *rb_id2name();
+char *rb_class2name();
 
-VALUE rb_funcall();
-int rb_scan_args();
+VALUE rb_funcall(VALUE, ID, int, ...);
+int rb_scan_args(VALUE, char*, ...);
 
 VALUE rb_yield();
 
diff -Naur ruby/socket.c ruby-patched/socket.c
--- ruby/socket.c	1994-07-06 23:55:06.000000000 +0900
+++ ruby-patched/socket.c	2018-03-20 12:45:55.730174400 +0900
@@ -12,6 +12,7 @@
 #ifdef HAVE_SOCKET
 #include "io.h"
 #include <stdio.h>
+#include <string.h>
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
diff -Naur ruby/sprintf.c ruby-patched/sprintf.c
--- ruby/sprintf.c	1994-07-15 11:20:52.000000000 +0900
+++ ruby-patched/sprintf.c	2018-03-20 12:45:55.740624900 +0900
@@ -12,6 +12,9 @@
 
 #include "ruby.h"
 #include <ctype.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 
 static void fmt_setup();
 
diff -Naur ruby/st.c ruby-patched/st.c
--- ruby/st.c	1994-06-28 00:48:41.000000000 +0900
+++ ruby-patched/st.c	2018-03-20 12:45:55.751871400 +0900
@@ -6,6 +6,7 @@
 #endif
 
 #include <stdio.h>
+#include <stdlib.h>
 #include "st.h"
 
 extern void *xmalloc();
diff -Naur ruby/st.h ruby-patched/st.h
--- ruby/st.h	1994-06-28 16:18:50.000000000 +0900
+++ ruby-patched/st.h	2018-03-20 11:16:50.254667800 +0900
@@ -54,4 +54,4 @@
 
 int st_strhash();
 
-#endif ST_INCLUDED
+#endif
diff -Naur ruby/string.c ruby-patched/string.c
--- ruby/string.c	1994-07-15 14:19:04.000000000 +0900
+++ ruby-patched/string.c	2018-03-20 12:45:55.781059100 +0900
@@ -14,6 +14,7 @@
 #include "re.h"
 
 #include <stdio.h>
+#include <string.h>
 #include <ctype.h>
 
 VALUE C_String;
diff -Naur ruby/struct.c ruby-patched/struct.c
--- ruby/struct.c	1994-07-18 17:06:54.000000000 +0900
+++ ruby-patched/struct.c	2018-03-20 12:45:55.789398000 +0900
@@ -10,6 +10,8 @@
 
 #include "ruby.h"
 #include "env.h"
+#include <string.h>
+#include <stdio.h>
 
 VALUE C_Struct;
 extern VALUE M_Enumerable;
@@ -76,12 +78,10 @@
     rb_define_single_method(s, mem, Fstruct_access, 0);
 }
 
-#include <varargs.h>
+#include <stdarg.h>
 
 VALUE
-struct_new(name, va_alist)
-    char *name;
-    va_dcl
+struct_new(int name, ...)
 {
     VALUE st;
     va_list args;
@@ -89,13 +89,13 @@
 
     GC_LINK;
     GC_PRO3(st, struct_alloc(C_Struct,name));
-    va_start(args);
+    va_start(args, name);
 
     while (mem = va_arg(args, char*)) {
 	struct_add(st, mem, va_arg(args, VALUE));
     }
 
-    va_end(vargs);
+    va_end(args);
     GC_UNLINK;
 
     return st;
diff -Naur ruby/time.c ruby-patched/time.c
--- ruby/time.c	1994-07-18 17:41:08.000000000 +0900
+++ ruby-patched/time.c	2018-03-20 12:45:55.802028900 +0900
@@ -11,6 +11,8 @@
 ************************************************/
 
 #include "ruby.h"
+#include <string.h>
+#include <time.h>
 #include <sys/types.h>
 #include <sys/time.h>
 #include <sys/times.h>
diff -Naur ruby/variable.c ruby-patched/variable.c
--- ruby/variable.c	1994-07-15 11:20:51.000000000 +0900
+++ ruby-patched/variable.c	2018-03-20 12:45:55.814231000 +0900
@@ -13,6 +13,7 @@
 #include "node.h"
 #include "ident.h"
 #include "st.h"
+#include <string.h>
 
 st_table *rb_global_tbl;
 st_table *rb_class_tbl;
